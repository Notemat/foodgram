version: '3.3'

volumes:
  pg_data_production:
  static_volume:
  media_volume:

services:
  db:
    image: postgres:13.10
    env_file: .env.production
    volumes:
      - pg_data_production:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 20s
      timeout: 50s
      retries: 5
  backend:
    container_name: foodgram-backend
    image: notemat/foodgram_backend
    env_file: .env.production
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
  frontend:
    container_name: foodgram-front
    image: notemat/foodgram_frontend
    env_file: .env.production
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static_volume:/frontend_static
  gateway:
    container_name: foodgram-nginx
    image: notemat/foodgram_nginx
    env_file: .env.production
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - static_volume:/staticfiles/
      - media_volume:/var/www/kittygram/media
      - ../docs/:/usr/share/nginx/html/api/docs/